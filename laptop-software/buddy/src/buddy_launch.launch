<!-- first launch file to launch buddy -->
<launch>
    <master auto="start"/>
    <param name="/use_sim_time" value="true"/>
    <node pkg="stage_ros" type="stageros" name="StageROS" args="/opt/ros/kinetic/share/stage_ros/world/willow-erratic.world"/>

    <node pkg="gmapping" type="slam_gmapping" name="gmappingSLAM" >
        <remap from="static_tf" to="/tf" />
        <remap from="scan" to="base_scan"/>
    </node>

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find  motor_control_drivers)../costmap_common_params.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find motor_control_drivers)../costmap_common_params.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find motor_control_drivers)../local_costmap_params.yaml" command="load" />
        <rosparam file="$(find motor_control_drivers)../global_costmap_params.yaml" command="load" />
        <rosparam file="$(find motor_control_drivers)../base_local_planner_params.yaml" command="load" />
    </node>

    <node pkg="amcl" type="amcl" name="amcl">
        <!-- Publish scans from best pose at a max of 10 Hz -->
        <param name="odom_model_type" value="diff"/>
        <remap from="scan" to="base_scan"/>
        <param name="use_map_topic" value="true" />
        <param name="odom_frame_id" value="odom" />
    </node>

    <group>
        <node pkg="motor_control_drivers" name="buddyRefresher" type="refreshBuddyData.py"/>
        <!--Refresh Rate in Hz-->
        <param name="refreshRate" value="10" type="int"/>
        <param name="buddyPort" value="/dev/ttyUSB0" type="string"/>
        <node pkg="motor_control_drivers" name="buddyWriter" type="serialWriter.py"/>
        <node pkg="motor_control_drivers" name="buddyReader" type="serialReader.py"/>
    </group>
    
    <!--<group>
        <param name="topicOut" value="buddySerial"/>
        <param name="publishRate" value="40" type="int"/>
        <param name="debugEnable" value="True" type="string"/>
        <param name="comPort" value="ttyUSB0"/>
        <node pkg="motor_control_drivers" name="serial" type="serial_node.py"/>
    </group>-->

    <!--<group ns="ultra">
        <param name="topicIn" value="/buddySerial"/>
        <param name="topicOut" value="ultra"/>
        <param name="sensorScale" value="0.05" type="double"/>
        <param name="sensorType" value="Ultra"/>
        <param name="sensorAngleRad" value="0.31415692" type="double"/>
        <param name="sensorMinDistM" value="0" type="int"/>
        <param name="sensorMaxDistM" value="400" type="int"/>
        <param name="numberDataPoints" value="10" type="int"/>
        
        <node pkg="sensor_to_laser" name="ultraSonicBack" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/ultra/ultraSonicBack/sensorNum"/>
            <param name="sensorNum" value="0" type="int"/>
            <remap from="validMask" to="/ultra/ultraSonicBack/validMask"/>
            <param name="validMask" value="16" type="int"/>
        </node>
        
        <node pkg="sensor_to_laser" name="ultraSonicFront" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/ultra/ultraSonicFront/sensorNum"/>
            <param name="sensorNum" value="1" type="int"/>
            <remap from="validMask" to="/ultra/ultraSonicFront/validMask"/>
            <param name="validMask" value="32" type="int"/>            
        </node>
        
    </group>-->

   <!--<group ns="infra">
        <param name="topicIn" value="/buddySerial"/>
        <param name="topicOut" value="infra"/>
        <param name="sensorScale" value="0.04" type="double"/>
        <param name="validMask" value="8" type="int"/>
        <param name="sensorType" value="infra"/>
        <param name="sensorAngleRad" value="0.1" type="double"/>
        <param name="sensorMinDistM" value="0" type="int"/>
        <param name="sensorMaxDistM" value="180" type="int"/>
        <param name="numberDataPoints" value="10" type="int"/>
        
        <node pkg="sensor_to_laser" name="infraRed0" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed0/sensorNum"/>
            <param name="sensorNum" value="0" type="int"/>        
        </node>

        <node pkg="sensor_to_laser" name="infraRed1" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed1/sensorNum"/>
            <param name="sensorNum" value="1" type="int"/>        
        </node>
        
        <node pkg="sensor_to_laser" name="infraRed2" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed2/sensorNum"/>
            <param name="sensorNum" value="2" type="int"/>        
        </node>
        
        <node pkg="sensor_to_laser" name="infraRed3" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed3/sensorNum"/>
            <param name="sensorNum" value="3" type="int"/>        
        </node>

        <node pkg="sensor_to_laser" name="infraRed4" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed4/sensorNum"/>
            <param name="sensorNum" value="4" type="int"/>        
        </node>
        
        <node pkg="sensor_to_laser" name="infraRed5" type="sensor_to_laser_base.py">
            <remap from="sensorNum" to="/infra/infraRed5/sensorNum"/>
            <param name="sensorNum" value="5" type="int"/>        
        </node>
    </group>-->
    
    <group ns="staticTFs">
        <node pkg="tf" type="static_transform_publisher" name="infraTF0" args="0.5  0.5  0 0.7853  0 0 base_link frame_infra0 100" />
        <node pkg="tf" type="static_transform_publisher" name="infraTF1" args="0    0.5  0 1.5708 0 0 base_link frame_infra1 100" />
        <node pkg="tf" type="static_transform_publisher" name="infraTF2" args="-0.5 0.5  0 2.3562  0 0 base_link frame_infra2 100" />
        <node pkg="tf" type="static_transform_publisher" name="infraTF3" args="-0.5 -0.5 0 -2.3562 0 0 base_link frame_infra3 100" />
        <node pkg="tf" type="static_transform_publisher" name="infraTF4" args="0    -0.5 0 -1.5708 0 0 base_link frame_infra4 100" />
        <node pkg="tf" type="static_transform_publisher" name="infraTF5" args="0.5  -0.5 0 -0.7853 0 0 base_link frame_infra5 100" />
        
        <node pkg="tf" type="static_transform_publisher" name="ultraTF0" args="0.5  0    0 0       0 0 base_link frame_ultra0 100" />
        <node pkg="tf" type="static_transform_publisher" name="ultraTF1" args="-0.5 0    0 3.1415  0 0 base_link frame_ultra1 100" />
    </group>

    <node pkg="rviz" type="rviz" name="myRviz" args="-d $(find motor_control_drivers)../rviz-config.rviz"/>
</launch>
